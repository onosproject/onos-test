#!/bin/bash
# Copyright 2020-present Open Networking Foundation.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Script to do a dry run build of all the micro onos components


set -e -u -o pipefail

# repos and targets to build
declare -a components=(
  "build-tools" "images"
  "onos-lib-go" "test"
  "helmit" "build"
  "onos-topo" "images"
  "onos-e2t" "images"
  "onos-kpimon" "images"
  "onos-mho" "images"
  "onos-mlb" "images"
  "onos-operator" "images"
  "onos-pci" "images"
  "onos-exporter" "images"
  "onos-e2-sm" "images"
  "onos-uenib" "images"
  "ran-simulator" "images"
  "config-models" "build"
  "onos-config" "images"
  "onos-cli" "images"
  "onos-docs" "images"
  "gnxi-simulators" "images"
)

length=${#components[@]}
length=$((length - 1))

rm -rf ./build-work-space
mkdir ./build-work-space
cd ./build-work-space

# pull and build master branches of included components
for i in $(seq 0 2 $length); do
  component=${components[$i]}
  target=${components[$i+1]}

  echo "Cloning ${component}"
  git clone git@github.com:onosproject/${component}.git --quiet
  cd ${component}
  make ${target}
  cd ..
done

# onos-gui - needs a special image to build
git clone git@github.com:onosproject/onos-gui.git --quiet
cd ./onos-gui
docker container run --rm -v $(pwd):/opt -w /opt teracy/angular-cli make deps build
cd ..

ARCHIVE="$WORKSPACE/published-logs"
rm -rf $ARCHIVE
mkdir -p $ARCHIVE

docker image ls >$ARCHIVE/all-images.log

sudo chown -R jenkins .

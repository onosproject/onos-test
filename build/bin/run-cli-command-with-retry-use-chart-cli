#!/usr/bin/env python3
""""
 SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>

 SPDX-License-Identifier: Apache-2.0
"""

import subprocess
import sys
import time

if __name__ == '__main__':
    failure = int(1)
    success = int(0)

    base_cli_command = 'kubectl -n micro-onos exec -t deploy/onos-cli -- onos '

    cli_command = base_cli_command
    checker = sys.argv[1]
    cli_args = sys.argv[2].split()

    for arg in cli_args[0:]:
        cli_command = cli_command + " " + arg

    checker_command = checker
    if len(sys.argv) > 3:
        checker_args = sys.argv[3].split()
        for arg in checker_args[0:]:
            checker_command = checker_command + " " + arg

    result = failure
    # capture CLI output
    max_attempts = int(15)
    done = False
    print("********* " + cli_command)
    while not done:
        try:
            print(cli_command)
            cli_output = subprocess.check_output(args=cli_command, shell=True)
            print("CLI output:\n" + cli_output.decode("utf-8"))

        except subprocess.CalledProcessError:
            cli_output = ""

        try:
            checker_output = subprocess.check_output(args=checker_command, input=cli_output, shell=True)
            print(checker_output.decode("utf-8"))
            exit(success)
        except subprocess.CalledProcessError as e:
            print("Checker error: " + e.output.decode("utf-8"))
            max_attempts -= 1

        if max_attempts == 0:
            done = True
            continue
        time.sleep(6)

    exit(failure)

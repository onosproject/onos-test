#!/usr/bin/env python3
""""
 Copyright 2021-present Open Networking Foundation.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

 Assuming debug logs are enabled for KPIMON, retrieves latest timestamps of KPIMON debug logs,
 calculates the time difference, and checks it matches the expected report-interval (in ms) within the retry period.
"""

import datetime
import subprocess

if __name__ == '__main__':
    check = "KPIMON Report Period Interval"
    expected_report_interval = 1000
    command = 'kubectl -n micro-onos logs deploy/onos-kpimon onos-kpimon --tail=1 | awk \'{ print $1 }\''

    current_time = subprocess.check_output(args=command, shell=True).decode("utf-8").rstrip('\n')
    current_time = datetime.datetime.strptime(current_time, "%Y-%m-%dT%H:%M:%S.%fZ").timestamp()
    retry = 100
    while (retry > 0):
        new_time = subprocess.check_output(args=command, shell=True).decode("utf-8").rstrip('\n')
        new_time = datetime.datetime.strptime(new_time, "%Y-%m-%dT%H:%M:%S.%fZ").timestamp()
        report_interval = int(round((new_time - current_time) * 1000, -3))
        print ("Current report interval: " + str(report_interval) + " ms. Expected: " + str(expected_report_interval) + " ms")
        if report_interval == expected_report_interval:
            print ("Check " + check + " passed")
            exit(0)
        elif report_interval > 0 and report_interval != expected_report_interval:
            break
        retry -= 1

    print ("Check " + check + " failed")
    exit(1)
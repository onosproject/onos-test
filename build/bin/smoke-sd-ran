#!/bin/bash
# Copyright 2020-present Open Networking Foundation.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This script is intended to be run from the onos-test directory as part of CI

set -eu -o pipefail

function waitForCluster {
  while true; do
    if kubectl -n micro-onos get pods -l type=ho | grep Running; then
      break
    fi
    sleep 3
  done
}

function countHandOvers {
  for i in $(seq 1 10); do
    count=$(curl -s http://localhost:9090/metrics | grep  onosproject_ransimulator_hometrics_count | cut -d " " -f2)
    if (( count > 0 )); then
      break
    fi
    sleep 5
  done
  echo "${count}"
}

if [ "$#" -ne 2 ]; then
  echo "Usage: smoke-sd-ran chart-repo-username chart-repo-password"
  exit 1
fi

# Download and install kubectl
curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/

# Download and install KinD
GO111MODULE=on go get sigs.k8s.io/kind

# Make a kind cluster
kind create cluster --quiet

# Download the onos helm charts
pushd .. && git clone https://github.com/onosproject/onos-helm-charts.git && popd
pushd .. && git clone git@github.com:onosproject/sdran-helm-charts.git && popd

repo_user=$1
repo_password=$2

pushd ..

helm repo add cord https://charts.opencord.org
helm repo add atomix https://charts.atomix.io
helm repo add onos https://charts.onosproject.org
helm repo add sdran --username "$repo_user" --password "$repo_password" https://sdrancharts.onosproject.org
helm repo update

kubectl create namespace micro-onos

helm -n micro-onos install atomix-controller atomix/kubernetes-controller --set scope=Namespace
helm -n micro-onos install cache-controller atomix/cache-storage-controller --set scope=Namespace
helm -n micro-onos install raft-controller atomix/raft-storage-controller --set scope=Namespace

sleep 20

cd sdran-helm-charts/sd-ran
rm -rf charts Chart.lock
helm dep build
cd ..

helm dependency update sd-ran

helm install -n micro-onos \
     --set global.storage.controller=atomix-controller-kubernetes-controller:5679 \
     --set import.nem-monitoring.enabled=false \
     --set import.onos-gui.enabled=true \
     --set import.onos-config.enabled=true \
     --set onos-ric.image.tag=latest \
     --set onos-ric-ho.image.tag=latest \
     --set onos-ric-mlb.image.tag=latest \
     --set onos-topo.image.tag=latest \
     --set onos-ric.replicaCount=1 \
     --set ran-simulator.image.tag=latest \
     --set ran-simulator.maxUEs=10000 \
     --set ran.simulator.minUEs=25 \
     --set onos-cli.image.tag=latest \
     sd-ran ./sd-ran


popd

waitForCluster

kubectl -n micro-onos port-forward "$(kubectl -n micro-onos get pods -l type=sim -o name)" 9090:9090 &
sleep 5

startCount=$(countHandOvers)
if (( startCount <= 0 )); then
    echo "Initial handover count is too small: ${startCount}"
    exit 1
fi

currentCount=${startCount}
for i in $(seq 1 5); do
  sleep 20
  newCount=$(countHandOvers)

  if (( newCount <= currentCount )); then
      echo "Handover count #${i} is too small: ${newCount}"
      exit 1
  fi
  currentCount=${newCount}
done

echo "Smoke test completed successfully!"

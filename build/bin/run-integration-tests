#!/bin/bash
# Copyright 2020-present Open Networking Foundation.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Script to build and run all of the onos integration tests

set -eu -o pipefail

if [ -z $1 ]
then
  testSuite="*** Unknown Test Suite ***"
elif [ -n $1 ]
then
# otherwise make first arg as a rental
  testSuite=$1
fi

# configure proxy variables
use_proxy="1"
proxy="mirror.registry.opennetworking.org"
cli_image="onosproject/onos-cli:latest"

# set up the test KinD cluster
onos_test=$PWD
. $onos_test/build/bin/setup-test-cluster
setup_test_cluster

$onos_test/build/bin/setup-artifacts

# make a directory to hold the downloaded source trees
rm -rf integration-tests && mkdir integration-tests && pushd integration-tests

# Download helmit
pushd .. && GO111MODULE=on go get github.com/onosproject/helmit/cmd/helmit && popd

# Download the onos helm charts
git clone https://github.com/onosproject/onos-helm-charts.git
git clone git@github.com:onosproject/sdran-helm-charts.git

common_args="--timeout 20m --secret sd-ran-username=$repo_user --secret sd-ran-password=$repo_password --no-teardown"
if [ $use_proxy = "1" ]; then
   common_args="$common_args --args registry=mirror.registry.opennetworking.org --image mirror.registry.opennetworking.org/onosproject/helmit-runner:latest"
fi
atomix_storage_version="v0.5.3"

run_integration_test_suite() {
     suite_name=$1
     binary_name=$2
     chart_name=$3
     extra_helmit_args=$4
     proxy_args=""
     if [ $use_proxy = "1" ]; then
         proxy_args="--set $chart_name.global.image.registry=$proxy --set $chart_name.global.image.registry=$proxy --set $chart_name.global.storage.consensus.image=$proxy/atomix/raft-storage-node:$atomix_storage_version"
     fi
     export NAMESPACE=$(echo $suite_name | tr "[:upper:]" "[:lower:]" )
     export NAMESPACE=${NAMESPACE}-ns
     echo $NAMESPACE
     err="0"
     ( kubectl delete ns "$NAMESPACE" || true ) && kubectl create ns "$NAMESPACE"
     if ! helmit test -n "$NAMESPACE" $common_args "$binary_name" --suite "$suite_name" --no-teardown $proxy_args $extra_helmit_args; then
         err=${PIPESTATUS[0]}
         echo "helmit returned error $err"
     fi
     ../../build/bin/archive-artifacts
     if [ "$err" -ne "0" ]; then
         echo "Smoke test failed"
         exit $err
     fi
     ../../build/bin/check-test-log-errors
}

case "$testSuite" in
"onos-topo-tests")
     # onos-topo
     git clone https://github.com/onosproject/onos-topo.git
     cd onos-topo
     git log -1
     make kind

     run_integration_test_suite "topo" "./cmd/onos-topo-tests" "onos-topo" ""
     ;;

"onos-config-tests")
    # onos-config
    git clone https://github.com/onosproject/onos-config.git
    cd onos-config
    git log -1
    make kind

    run_integration_test_suite "cli" "./cmd/onos-config-tests" "onos-umbrella" ""
    kubectl delete ns $NAMESPACE
    run_integration_test_suite "gnmi" "./cmd/onos-config-tests" "onos-umbrella" ""
    #run_integration_test_suite "ha" "./cmd/onos-config-tests" "onos-umbrella" ""
    ;;

"onos-e2t-tests")
    # onos-e2t
    E2T_REPLICAS=${E2T_REPLICAS:-"2"}
    git clone git@github.com:onosproject/onos-e2t.git
    cd onos-e2t
    git log -1
    make kind

    run_integration_test_suite "e2" "./cmd/onos-e2t-tests" "sd-ran" "--set sd-ran.onos-e2t.replicaCount=$E2T_REPLICAS"
    kubectl delete ns $NAMESPACE
    ;;

"onos-e2t-ha-tests")
    # onos-e2t HA tests
    git clone git@github.com:onosproject/onos-e2t.git
    cd onos-e2t
    git log -1
    make kind

    run_integration_test_suite "ha" "./cmd/onos-e2t-tests" "sd-ran" ""
    kubectl delete ns $NAMESPACE
    ;;

"ran-sim-tests")
    # ran-simulator
    git clone git@github.com:onosproject/ran-simulator.git
    cd ran-simulator
    git log -1
    make kind

    #run_integration_test_suite "e2t" "./cmd/ransim-tests" "sd-ran" ""
    ;;

"onos-pci-tests")
    # onos-pci
    git clone git@github.com:onosproject/onos-pci.git
    cd onos-pci
    git log -1
    make kind

    run_integration_test_suite "pci" "./cmd/onos-pci-tests" "sd-ran" ""
    kubectl delete ns $NAMESPACE
    run_integration_test_suite "scale" "./cmd/onos-pci-tests" "sd-ran" ""
    kubectl delete ns $NAMESPACE

    ;;

"onos-uenib-tests")
    # onos-pci
    git clone git@github.com:onosproject/onos-uenib.git
    cd onos-uenib
    git log -1
    make kind

    run_integration_test_suite "uenib" "./cmd/onos-uenib-tests" "sd-ran" ""
    ;;

"onos-kpimon-tests")
    # onos-kpimon
    git clone git@github.com:onosproject/onos-kpimon.git
    cd onos-kpimon
    git log -1
    make kind

    run_integration_test_suite "kpm" "./cmd/onos-kpimon-test" "sd-ran" ""
    kubectl delete ns $NAMESPACE

    run_integration_test_suite "ha" "./cmd/onos-kpimon-test" "sd-ran" ""
    kubectl delete ns $NAMESPACE

    ;;

"onos-mlb-tests")
    # onos-mlb
    git clone git@github.com:onosproject/onos-mlb.git
    cd onos-mlb
    git log -1
    make kind

    run_integration_test_suite "overload" "./cmd/onos-mlb-test" "sd-ran" ""
    kubectl delete ns $NAMESPACE
    run_integration_test_suite "underload" "./cmd/onos-mlb-test" "sd-ran" ""
    kubectl delete ns $NAMESPACE
    run_integration_test_suite "targetload" "./cmd/onos-mlb-test" "sd-ran" ""
    kubectl delete ns $NAMESPACE

    ;;

"onos-helm-charts")
    # onos-helm-charts

    cd onos-helm-charts
    git log -1
    helm repo add cord https://charts.opencord.org
    helm repo add atomix https://charts.atomix.io
    helm repo add onos https://charts.onosproject.org
    helm repo update
    run_integration_test_suite "onos-topo" "./test" "onos-topo" ""
    kubectl delete ns $NAMESPACE
    run_integration_test_suite "onos-config" "./test" "onos-config" ""
    kubectl delete ns $NAMESPACE
    run_integration_test_suite "onos-umbrella" "./test" "onos-umbrella" ""
    kubectl delete ns $NAMESPACE
    ;;

"sdran-helm-charts")
    # sdran-helm-charts
    cd sdran-helm-charts
    git log -1
    helm repo add sdran --username ${repo_user} --password ${repo_password} https://sdrancharts.onosproject.org
    helm repo add cord https://charts.opencord.org
    helm repo add atomix https://charts.atomix.io
    helm repo add onos https://charts.onosproject.org
    helm repo update
    run_integration_test_suite "sd-ran" "./test" "sd-ran" ""
    kubectl delete ns $NAMESPACE
    ;;

"master-build")
    # build of all micro onos components
    ../build/bin/build-everything
    ;;

*) echo "You have failed to specify test suite."
    exit 1
    ;;
esac

popd

echo "Test suite $testSuite passed!"

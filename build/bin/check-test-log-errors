#!/bin/bash
# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: Apache-2.0

# Script to build and run all of the onos integration tests

set -u

kubectl get pod -n "$NAMESPACE"

for pod in $(kubectl get pods -n "$NAMESPACE" | grep -v Terminating | grep -v Completed | awk '{print $1}' | tail -n +2)
do
  # Check for any error conditions in the log file
  errors=$( kubectl logs -n "$NAMESPACE" "$pod" --all-containers | grep '^....-..-..T..:..:......Z	ERROR' )
  if (( $? == 0 ))
  then
    echo Errors found in namespace "$NAMESPACE" logs of "$pod" :
    echo "$errors"
    exit 1
  fi

  # Make sure all the pods became ready
  ready=$(kubectl get pod -n "$NAMESPACE" "$pod" | awk '{print $2}' | tail -n +2)
  IFS='/' read -ra readyValues <<< "$ready"
  if [ "${readyValues[0]}" != "${readyValues[1]}" ]
  then
    running=$( kubectl get pod -n "$NAMESPACE" "$pod" | grep -q Running )
    if (( $? != 0 ))
    then
      echo "Pod " "$pod" " is not fully ready " "$ready"
      kubectl get pod -n "$NAMESPACE" "$pod"
      exit 1
    fi
  fi

  # Make sure no pods have restarted
  restarts=$(kubectl get pod -n "$NAMESPACE" "$pod" | awk '{print $4}' | tail -n +2)
  if [ "$restarts" != "0" ]
  then
    echo "Pod " "$pod" " restarted"
    kubectl get pod -n "$NAMESPACE" "$pod"
    exit 1
  fi

done

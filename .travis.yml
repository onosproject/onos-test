sudo: false

language: go

go:
  - '1.14.x'

services:
  - docker

notifications:
  email: false

branches:
  only:
    - master

#cache:
#  directories:
#    - $HOME/gopath/pkg/mod         # Cache the Go modules

before_script:
  - curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.23.6
  - go clean --modcache

jobs:
  include:
    - stage: tests
      script: make coverage

    - stage: docs build
      if: type != pull_request
      script:
        - sh build/bin/trigger-docs-travis $TRAVIS_ACCESS_TOKEN

    - stage: integration-tests
      name: "onos-topo integration tests"
      if: type != pull_request
      notifications:
        email:
          - andrea@opennetworking.org
          - jordan@opennetworking.org
          - ray@opennetworking.org
          - sean@opennetworking.org
          - tom@opennetworking.org

      script:
        # Download and install kubectl
        - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/

        # Download and install KinD
        - GO111MODULE=on go get sigs.k8s.io/kind
        - git checkout go.mod go.sum
        - kind create cluster
        - build/bin/run-integration-tests onos-topo
    - # stage name not required, will continue to use `integration-tests`
      name: "onos-config integration tests"
      if: type != pull_request
      script:
        # Download and install kubectl
        - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/

        # Download and install KinD
        - GO111MODULE=on go get sigs.k8s.io/kind
        - git checkout go.mod go.sum
        - kind create cluster
        - build/bin/run-integration-tests onos-config
    - # stage name not required, will continue to use `integration-tests`
      name: "onos-ric integration tests"
      if: type != pull_request
      script:
        # Download and install kubectl
        - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/

        # Download and install KinD
        - GO111MODULE=on go get sigs.k8s.io/kind
        - git checkout go.mod go.sum
        - kind create cluster
        - build/bin/run-integration-tests onos-ric
    - # stage name not required, will continue to use `integration-tests`
      name: "onos-helm-charts integration tests"
      if: type != pull_request
      script:
        # Download and install kubectl
        - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/

        # Download and install KinD
        - GO111MODULE=on go get sigs.k8s.io/kind
        - git checkout go.mod go.sum
        - kind create cluster
        - build/bin/run-integration-tests onos-helm-charts

    - stage: push images
      if: type != pull_request
      script:
          - bash ./build/bin/push-images
